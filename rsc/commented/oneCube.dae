<!-- MASTER COMMENTED COLLADA FILE -->
<!-- DO NOT OVERWRITE -->
<!-- REFERENCE FOR PARSING -->

<!-- will need to handle utf-16 ??? -->
<?xml version="1.0" encoding="utf-8"?>

<!-- root node is always "COLLADA" -->
<!-- if not throw resource parse exception -->

<COLLADA xmlns="http://www.collada.org/2005/11/COLLADASchema" version="1.4.1">
  
  <!-- asset definintion -->
  <!-- not explicitly needed for a parse -->
  <!-- get dev version to avoid null pointers -->
  
  <asset>
    <contributor>
      <author>Blender User</author>
      <authoring_tool>Blender 2.68.0 r58537</authoring_tool>
    </contributor>
	
	<!-- probably not significant -->
    <created>2013-09-06T10:05:59</created>
    <modified>2013-09-06T10:05:59</modified>
	
    <unit name="meter" meter="1"/>
	
	<!-- IMPORTANT -->
	<!-- use up_axis to define orentation -->
	<!-- Blender uses z_up -->
	<!-- gl 4.4 use x_up -->
	<!-- check for and transform mesh for proper orentation -->
	
    <up_axis>Z_UP</up_axis>
  </asset>
  
  <!-- end asset definition -->
  
  <!-- library and texture images -->
  <!-- will be null close tag if none are used -->
  
  <library_images/>
  
  <!-- begin mtl and tex effects: lighting props -->
  
  <library_effects>
    
	<!-- root node for a whole effect -->
    <effect id="Material-effect">
      <profile_COMMON>
	
        <technique sid="common">
          <phong>
		  
		    <!-- color of light emmitted from the mesh (RGB, intensity [i think?]) -->
            <emission>
              <color sid="emission">0 0 0 1</color>
            </emission>
			
			<!-- background light (RGB, intensity [again, i think >]) -->
            <ambient>
              <color sid="ambient">0 0 0 1</color>
            </ambient>
			
			
            <diffuse>
              <color sid="diffuse">0.64 0.64 0.64 1</color>
            </diffuse>
			
			<!-- for all intensive purposes, reflectivity -->
			<!-- color offset, see previous format -->
            <specular>
              <color sid="specular">0.5 0.5 0.5 1</color>
            </specular>
			
			<!-- light scatter -->
            <shininess>
              <float sid="shininess">50</float>
            </shininess>
			
			<!-- throw resourceParseException if less than 1 -->
			<!-- angle of refraction for translucent surfaces -->
            <index_of_refraction>
              <float sid="index_of_refraction">1</float>
            </index_of_refraction>
          </phong>
        </technique>
		
		<!-- no idea, research -->
        <extra>
          <technique profile="GOOGLEEARTH">
            <double_sided>1</double_sided>
          </technique>
        </extra>
		<!-- end no idea -->
		
      </profile_COMMON>
	  
	  <!-- MAX3D double sided plane -->
	  <!-- check how to handle -->
      <extra><technique profile="MAX3D"><double_sided>1</double_sided></technique></extra>
    </effect>
  </library_effects>
  
  <!-- end effects -->
  
  <!-- begin mtl definition -->
  
  <library_materials>
    <material id="Material-material" name="Material">
	
	  <!-- # used for internal resource link -->
	  <!-- see link in library effects when parsing -->
      <instance_effect url="#Material-effect"/>
    </material>
  </library_materials>
  
  <!-- end mtl defintion -->
  
  
  
  
  <!-- primary geometries -->
  
  
  
  
  
  
  <library_geometries>
	
	<!-- immediate sub nodes defines super geometric sets -->
    <geometry id="Cube-mesh" name="Cube">
	  
	  <!-- defines meshes -->
      <mesh>
	  
		<!-- source defines each source needed to accurately generate a mesh -->
		<!-- ID defines the type of source included in the subnodes -->
        <source id="Cube-mesh-positions">
		
		  <!-- float array, raw text of parsable floats that define vertiices in 3D space + rot -->
          <float_array id="Cube-mesh-positions-array" count="24">1 1 -1 1 -1 -1 -1 -0.9999998 -1 -0.9999997 1 -1 1 0.9999995 1 0.9999994 -1.000001 1 -1 -0.9999997 1 -1 1 1</float_array>
		  
		  <!-- defines subnodes for constraints for the previous float data -->
		  <!-- USEFUL FOR PARSING!!! -->
          <technique_common>
			<!-- accessor defines the array specifically -->
			<!-- source: link to super node -->
			<!-- count: num of subsets -->
			<!-- strinde: lentgh of a subset -->
            <accessor source="#Cube-mesh-positions-array" count="8" stride="3">
			  <!-- param defines each element of a sub set -->
			  <!-- name: axis val -->
			  <!-- type: variable type -->
              <param name="X" type="float"/>
              <param name="Y" type="float"/>
              <param name="Z" type="float"/>
            </accessor>
          </technique_common>
        </source>
		
		<!-- for node explanation see vertex comments -->
        <source id="Cube-mesh-normals">
          <float_array id="Cube-mesh-normals-array" count="36">0 0 -1 0 0 1 1 0 -2.38419e-7 0 -1 -2.98023e-7 -1 2.38419e-7 -1.19209e-7 2.68221e-7 1 2.38419e-7 0 0 -1 0 0 1 1 -5.66244e-7 3.27825e-7 -4.76837e-7 -1 0 -1 2.08616e-7 -1.49012e-7 2.08616e-7 1 1.78814e-7</float_array>
          <technique_common>
            <accessor source="#Cube-mesh-normals-array" count="12" stride="3">
              <param name="X" type="float"/>
              <param name="Y" type="float"/>
              <param name="Z" type="float"/>
            </accessor>
          </technique_common>
        </source>
		
		
		<!-- END VERTEX and NORMAL DEFINITION -->
		
		<!-- BEGIN POLY and FACE DEFINITIOM -->
		
		<!-- link to mesh -->
		<!-- for mapping??? -->
        <vertices id="Cube-mesh-vertices">
          <input semantic="POSITION" source="#Cube-mesh-positions"/>
        </vertices>
		
		<!-- polylist, mapping ??? -->
        <polylist material="Material-material" count="12">
          <input semantic="VERTEX" source="#Cube-mesh-vertices" offset="0"/>
          <input semantic="NORMAL" source="#Cube-mesh-normals" offset="1"/>
          <vcount>3 3 3 3 3 3 3 3 3 3 3 3 </vcount>
          <p>0 0 1 0 3 0 4 1 7 1 5 1 0 2 4 2 1 2 1 3 5 3 2 3 2 4 6 4 3 4 4 5 0 5 7 5 1 6 2 6 3 6 7 7 6 7 5 7 4 8 5 8 1 8 5 9 6 9 2 9 6 10 7 10 3 10 0 11 3 11 7 11</p>
        </polylist>
		
      </mesh>
	  
	  <!-- END MESH DEFINITION -->
	  
      <extra><technique profile="MAYA"><double_sided>1</double_sided></technique></extra>
	
    </geometry>
	
	<!-- END GEOMETRY SUBSET DEFINITION -->
	
  </library_geometries>
  
  
  
  
  
  
  <!-- end geometries -->
  
  
  
  
  
  <!-- null tag for library controllers -->
  <!-- no idea what these do -->
  <library_controllers/>
  
  
  <!-- scenes -->
  <!-- IMPORTANT -->
  
  <!-- I believe this contains anim sets and frames -->
  <!-- the cube is a static render, so only one scene should be here -->
  <library_visual_scenes>
  
    <!-- a scene -->
	<!-- check for difference between id and name -->
    <visual_scene id="Scene" name="Scene">
	
	  <!-- node (one mesh or mesh grouping -->
	  <!-- check for difference between id and name -->
      <!-- check what values are valid for type -->	  
      <node id="Cube" name="Cube" type="NODE">
		<!-- transformation and rotation of the mesh(es) -->
        <matrix sid="transform">1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1</matrix>
		
		<!-- what previously defined mesh(es) are used (transformed) in the scene -->
        <instance_geometry url="#Cube-mesh">
		
		  <!-- where mtl, effects, and mesh are all defines as a whole for the first time -->
          <bind_material>
            <technique_common>
			  <!-- mtl link to mesh -->
              <instance_material symbol="Material-material" target="#Material-material"/>
            </technique_common>
          </bind_material>
        </instance_geometry>
      </node>
    </visual_scene>
  </library_visual_scenes>
  
  <!-- initial scene (frame) (anim frame) -->
  <scene>
    <instance_visual_scene url="#Scene"/>
  </scene>
  
  
</COLLADA>